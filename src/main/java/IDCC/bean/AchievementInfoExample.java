package IDCC.bean;

import java.util.ArrayList;
import java.util.List;

public class AchievementInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table achievement_info
     *
     * @mbg.generated Wed Aug 11 16:49:25 CST 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table achievement_info
     *
     * @mbg.generated Wed Aug 11 16:49:25 CST 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table achievement_info
     *
     * @mbg.generated Wed Aug 11 16:49:25 CST 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_info
     *
     * @mbg.generated Wed Aug 11 16:49:25 CST 2021
     */
    public AchievementInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_info
     *
     * @mbg.generated Wed Aug 11 16:49:25 CST 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_info
     *
     * @mbg.generated Wed Aug 11 16:49:25 CST 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_info
     *
     * @mbg.generated Wed Aug 11 16:49:25 CST 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_info
     *
     * @mbg.generated Wed Aug 11 16:49:25 CST 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_info
     *
     * @mbg.generated Wed Aug 11 16:49:25 CST 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_info
     *
     * @mbg.generated Wed Aug 11 16:49:25 CST 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_info
     *
     * @mbg.generated Wed Aug 11 16:49:25 CST 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_info
     *
     * @mbg.generated Wed Aug 11 16:49:25 CST 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_info
     *
     * @mbg.generated Wed Aug 11 16:49:25 CST 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_info
     *
     * @mbg.generated Wed Aug 11 16:49:25 CST 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table achievement_info
     *
     * @mbg.generated Wed Aug 11 16:49:25 CST 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andAchievementClassidIsNull() {
            addCriterion("Achievement_ClassId is null");
            return (Criteria) this;
        }

        public Criteria andAchievementClassidIsNotNull() {
            addCriterion("Achievement_ClassId is not null");
            return (Criteria) this;
        }

        public Criteria andAchievementClassidEqualTo(Integer value) {
            addCriterion("Achievement_ClassId =", value, "achievementClassid");
            return (Criteria) this;
        }

        public Criteria andAchievementClassidNotEqualTo(Integer value) {
            addCriterion("Achievement_ClassId <>", value, "achievementClassid");
            return (Criteria) this;
        }

        public Criteria andAchievementClassidGreaterThan(Integer value) {
            addCriterion("Achievement_ClassId >", value, "achievementClassid");
            return (Criteria) this;
        }

        public Criteria andAchievementClassidGreaterThanOrEqualTo(Integer value) {
            addCriterion("Achievement_ClassId >=", value, "achievementClassid");
            return (Criteria) this;
        }

        public Criteria andAchievementClassidLessThan(Integer value) {
            addCriterion("Achievement_ClassId <", value, "achievementClassid");
            return (Criteria) this;
        }

        public Criteria andAchievementClassidLessThanOrEqualTo(Integer value) {
            addCriterion("Achievement_ClassId <=", value, "achievementClassid");
            return (Criteria) this;
        }

        public Criteria andAchievementClassidIn(List<Integer> values) {
            addCriterion("Achievement_ClassId in", values, "achievementClassid");
            return (Criteria) this;
        }

        public Criteria andAchievementClassidNotIn(List<Integer> values) {
            addCriterion("Achievement_ClassId not in", values, "achievementClassid");
            return (Criteria) this;
        }

        public Criteria andAchievementClassidBetween(Integer value1, Integer value2) {
            addCriterion("Achievement_ClassId between", value1, value2, "achievementClassid");
            return (Criteria) this;
        }

        public Criteria andAchievementClassidNotBetween(Integer value1, Integer value2) {
            addCriterion("Achievement_ClassId not between", value1, value2, "achievementClassid");
            return (Criteria) this;
        }

        public Criteria andAchievementClassnameIsNull() {
            addCriterion("Achievement_ClassName is null");
            return (Criteria) this;
        }

        public Criteria andAchievementClassnameIsNotNull() {
            addCriterion("Achievement_ClassName is not null");
            return (Criteria) this;
        }

        public Criteria andAchievementClassnameEqualTo(String value) {
            addCriterion("Achievement_ClassName =", value, "achievementClassname");
            return (Criteria) this;
        }

        public Criteria andAchievementClassnameNotEqualTo(String value) {
            addCriterion("Achievement_ClassName <>", value, "achievementClassname");
            return (Criteria) this;
        }

        public Criteria andAchievementClassnameGreaterThan(String value) {
            addCriterion("Achievement_ClassName >", value, "achievementClassname");
            return (Criteria) this;
        }

        public Criteria andAchievementClassnameGreaterThanOrEqualTo(String value) {
            addCriterion("Achievement_ClassName >=", value, "achievementClassname");
            return (Criteria) this;
        }

        public Criteria andAchievementClassnameLessThan(String value) {
            addCriterion("Achievement_ClassName <", value, "achievementClassname");
            return (Criteria) this;
        }

        public Criteria andAchievementClassnameLessThanOrEqualTo(String value) {
            addCriterion("Achievement_ClassName <=", value, "achievementClassname");
            return (Criteria) this;
        }

        public Criteria andAchievementClassnameLike(String value) {
            addCriterion("Achievement_ClassName like", value, "achievementClassname");
            return (Criteria) this;
        }

        public Criteria andAchievementClassnameNotLike(String value) {
            addCriterion("Achievement_ClassName not like", value, "achievementClassname");
            return (Criteria) this;
        }

        public Criteria andAchievementClassnameIn(List<String> values) {
            addCriterion("Achievement_ClassName in", values, "achievementClassname");
            return (Criteria) this;
        }

        public Criteria andAchievementClassnameNotIn(List<String> values) {
            addCriterion("Achievement_ClassName not in", values, "achievementClassname");
            return (Criteria) this;
        }

        public Criteria andAchievementClassnameBetween(String value1, String value2) {
            addCriterion("Achievement_ClassName between", value1, value2, "achievementClassname");
            return (Criteria) this;
        }

        public Criteria andAchievementClassnameNotBetween(String value1, String value2) {
            addCriterion("Achievement_ClassName not between", value1, value2, "achievementClassname");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table achievement_info
     *
     * @mbg.generated do_not_delete_during_merge Wed Aug 11 16:49:25 CST 2021
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table achievement_info
     *
     * @mbg.generated Wed Aug 11 16:49:25 CST 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}